plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    testCompile 'org.testng:testng:6.8.8'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile 'com.google.apis:google-api-services-sheets:v4-rev516-1.23.0'
    compile 'com.fifesoft:rsyntaxtextarea:3.0.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.6'
}

buildConfig {
    appName = project.name
    version = project.version
    
    buildConfigField 'String', 'DISPLAY_NAME', "$displayname"
    buildConfigField 'String', 'GITHUB_URL', "$githuburl"
    buildConfigField 'String', 'UPDATE_URL', "$releasesurl"
    buildConfigField 'String', 'JAR_NAME', "${jarname}.jar"
    buildConfigField 'String', 'DATA_DIR', "$datadir"

    clsName = 'BuildConfig'
    packageName = project.group
    charset = 'UTF-8'
}

test {
    useTestNG()
}

jar {
    if (!project.hasProperty("includeSecret")) {
        exclude 'client_secret.json'
    }
    archiveBaseName = "$jarname"
}

mainClassName = "de.robojumper.ddsavereader.Main"

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': mainClassName
    }
    archiveBaseName = "$jarname"
    archiveFileName = "${jarname}.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task dist(type: Zip, dependsOn: fatJar) {
    from("${buildDir}/libs") {
        include "${jarname}.jar"
    }
    from("${projectDir}") {
        include 'LICENSE'
        include 'README.md'
    }
    from ("${projectDir}/Licenses") {
        include "**/*"
        into "Licenses"
    }
    from ("${projectDir}/docs") {
        include "**/*"
        into "docs"
    }
    destinationDir = file("${buildDir}/dist")
    baseName = "${jarname}"
}
